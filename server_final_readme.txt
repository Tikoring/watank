서버 개발 코멘트

0. 플레이어 동기화, 포탄 동기화 까지 개발 진행 

1. 애니메이션 동기화시 추가 작업 필요 + 시간 많이 소요될것으로 예상. 
애니메이션과 기타 이팩트를 싱글이 아니라 서버에서 동기화 하고자 한다면 클라이언트 측에서 빠르게 작업해야함
최소 6시간 이상 걸릴것으로 보임

2. Tank controll 및 move 스크립트 제거, 병합
통신을 하는 게임에서 플레이어의 움직임을 Update로 구현할 시 반드시 서버와의 통신을 거쳐야함. 따라서
기존 스크립트를 삭제하는게 필수불가결했음

3. 카메라 동기화( - 모두가 같은 화면을 보는 상황 - 포탄을 쏘고 턴에 따라 비추는 플레이어가 다른 )
구현에는 시간이 많이 걸리지 않을것으로 예상

4. 프로젝트가 통째로 초기화된 이슈를 좀 검색해본 결과 개발중에 팅기거나 유니티를 갑자기 꺼버리고 재시작하면 씬 + 프로젝트 파일 전부가 날아가버리고
초기상태로 돌아간다는 얘기가 있음. 씬 저장도 소용 없으니 혹시나 쎄 할 경우 절대 프로젝트를 재시작하지말고 바로 경로파일에 가면 
일부 복구 가능하다고 함.

5. 일부 주석을 달긴 했으나 시간이 촉박하여 거의 설명을 달지 못했습니다. 개인적으로 궁금한건 무조건 물어봐주세요.

6. 주의) 프로젝트 경로 - 폴더 위치, 파일 위치 바꾸면 안됩니다. Resources 폴더에 Player, projectile 을 옮기고 사용하였고 Prefabs 폴더 파일 변경 

7.  OtherPlayer tag 변경. 서버에서 자신과 남을 구분할수 있으니 똑같이 Player 태그로 설정해도 됩니다.

8. NetworkManager.cs 파일은 손 안대셔도 됩니다.

9. 코드를 병합하는 과정에서 특별한 버그는 없었으나 테스트 중 이상이 있다면 이슈로 만들어주세요

10. 정말 최대한 기존의 코드를 유지하면서 수정을 하였으니 기존의 코드와 비교하며 개발한다면 추가 개발하는데 문제는 없을거라고 생각하지만
개발중에 버그가 생기면 이슈로 만들어주세요


이슈
1. 
상황 : 서버와 클라이언트가 턴 구현에 대한 이해가 없는 상태에서 각자 개발이 시작되어 클라이언트와 분리되어 이중 작업을 함
문제 : 클라이언트가 고생하여 작업한게 의미가 없어짐 , 서버는 기존 클라이언트 코드를 수정하고 새로 만들게되어 이중작업을함
원인 : 서버파트의 건강, 커뮤니케이션 부족
해결 : 최대한 많이 소통

2. 
상황 : 클라이언트가 3명이 분업화 되어있는데 서버 작업시 분할된 클래스에 대한 가이드라인이 없어 소스코드 읽는데 시간이 오래 걸림 
문제 : 서버 파트 개발이 오래걸림
원인 : 서버가 코딩을 잘 못함
해결 : 이쁘게 디자인 하지 않아도 A4 용지에 끄적인 최소한의 UML이 있다면 서버 개발에 훨씬 시간을 단축시킬수 있을거라 생각함 
